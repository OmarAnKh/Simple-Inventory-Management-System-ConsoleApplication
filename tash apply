[33mcommit 991f2f5e6d96f6a62bb9f4c52e520e7c733746e6[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mPrinting[m[33m, [m[1;31morigin/AddProduct[m[33m, [m[1;32mprintProducts[m[33m, [m[1;32mAddProduct[m[33m)[m
Author: omarankh <omarkhalili810@gmail.com>
Date:   Sun Feb 9 15:54:37 2025 +0200

    Add product and load products from file methods:
    
    i have added the add prodcut to the program so it save the product to
    the list and to the file
    and load from the same file

[1mdiff --git a/.idea/.idea.SimpleInventoryManagementSystem/.idea/vcs.xml b/.idea/.idea.SimpleInventoryManagementSystem/.idea/vcs.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..94a25f7[m
[1m--- /dev/null[m
[1m+++ b/.idea/.idea.SimpleInventoryManagementSystem/.idea/vcs.xml[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="VcsDirectoryMappings">[m
[32m+[m[32m    <mapping directory="$PROJECT_DIR$" vcs="Git" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/SimpleInventoryManagementSystem/Files/Products.txt b/SimpleInventoryManagementSystem/Files/Products.txt[m
[1mindex e69de29..fab1f6e 100644[m
[1m--- a/SimpleInventoryManagementSystem/Files/Products.txt[m
[1m+++ b/SimpleInventoryManagementSystem/Files/Products.txt[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mCooc,10,20[m
[32m+[m[32mchips,20,5[m
[32m+[m[32mChoocola,20,2[m
[1mdiff --git a/SimpleInventoryManagementSystem/Program.cs b/SimpleInventoryManagementSystem/Program.cs[m
[1mindex e5dff12..d7c8de2 100644[m
[1m--- a/SimpleInventoryManagementSystem/Program.cs[m
[1m+++ b/SimpleInventoryManagementSystem/Program.cs[m
[36m@@ -1,3 +1,15 @@[m
[31m-ï»¿// See https://aka.ms/new-console-template for more information[m
[32m+[m[32mï»¿using System;[m
[32m+[m[32musing SimpleInventoryManagementSystem.models;[m
 [m
[31m-Console.WriteLine("Hello, World!");[m
\ No newline at end of file[m
[32m+[m[32mnamespace AirportTicketBookingExercise[m
[32m+[m[32m{[m
[32m+[m[32m    static class Program[m
[32m+[m[32m    {[m
[32m+[m[32m        private static void Main()[m
[32m+[m[32m        {[m
[32m+[m[32m            Products products = Products.GetInstance();[m
[32m+[m
[32m+[m[32m            Console.WriteLine(products.AddProduct("Choocola", 20, 2));[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/SimpleInventoryManagementSystem/models/ProductsList.cs b/SimpleInventoryManagementSystem/models/ProductsList.cs[m
[1mindex b57f11e..986e0e5 100644[m
[1m--- a/SimpleInventoryManagementSystem/models/ProductsList.cs[m
[1m+++ b/SimpleInventoryManagementSystem/models/ProductsList.cs[m
[36m@@ -3,6 +3,7 @@[m [mnamespace SimpleInventoryManagementSystem.models;[m
 public interface IProductsPersistence[m
 {[m
     List<Product> GetProducts();[m
[32m+[m[32m    bool AddProduct(Product product);[m[41m [m
     [m
 }[m
 public interface IProductsListManager[m
[36m@@ -21,12 +22,31 @@[m [mpublic class ProductsListManager : IProductsListManager[m
 [m
 public class ProductsFilePersistence : IProductsPersistence[m
 {[m
[32m+[m[32m    public bool AddProduct(Product product)[m
[32m+[m[32m    {[m
[32m+[m[32m        try[m
[32m+[m[32m        {[m
[32m+[m[32m            string filePath = "../../../Files/products.txt";[m[41m [m
[32m+[m
[32m+[m[32m            using (StreamWriter writer = new StreamWriter(filePath, append: true))[m
[32m+[m[32m            {[m
[32m+[m[32m                writer.WriteLine($"{product.Name},{product.Quantity},{product.Price}");[m[41m [m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m        catch (Exception ex)[m
[32m+[m[32m        {[m
[32m+[m[32m            Console.WriteLine($"Error: {ex.Message}");[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
     public List<Product> GetProducts()[m
     {[m
         List<Product> products = new List<Product>();[m
         try[m
         {[m
[31m-            StreamReader sr = new StreamReader("products.txt");[m
[32m+[m[32m            StreamReader sr = new StreamReader("../../../Files/products.txt");[m
             string? line= sr.ReadLine();[m
             while (line!=null)[m
             {[m
[36m@@ -35,14 +55,12 @@[m [mpublic class ProductsFilePersistence : IProductsPersistence[m
                 line = sr.ReadLine();[m
             }[m
             sr.Close();[m
[31m-            [m
         }[m
         catch (Exception e)[m
         {[m
             Console.WriteLine($"Couldn't Read from the file: {e.Message}");[m
             System.Environment.Exit(1);[m
         }[m
[31m-[m
         return products;[m
     }[m
 }[m
[36m@@ -51,9 +69,11 @@[m [mpublic class Products[m
     private static readonly object _lock = new object();[m
     private static  Products _products;[m
     private readonly List<Product> _productsList;[m
[32m+[m[32m    private readonly IProductsPersistence _productsFilePersistence;[m
     private Products()[m
     {[m
[31m-        _productsList = new List<Product>();    [m
[32m+[m[32m        _productsFilePersistence = new ProductsFilePersistence();[m
[32m+[m[32m        _productsList = _productsFilePersistence.GetProducts();[m[41m    [m
     }[m
 [m
     public static Products GetInstance()[m
[36m@@ -65,4 +85,18 @@[m [mpublic class Products[m
 [m
         return _products;[m
     }[m
[32m+[m
[32m+[m[32m    public bool AddProduct(string productName, int productQuantity, int productPrice)[m
[32m+[m[32m    {[m
[32m+[m[32m        Product product = new Product(productName, productQuantity, productPrice);[m
[32m+[m[32m        if (_productsFilePersistence.AddProduct(product))[m
[32m+[m[32m        {[m
[32m+[m[32m            _productsList.Add(product);[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return false;[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
 }[m
\ No newline at end of file[m

[33mcommit 223e62bd64da5b16da55bf740df7e4c0cd8b9452[m[33m ([m[1;31morigin/main[m[33m, [m[1;32mmain[m[33m)[m
Author: omarankh <omarkhalili810@gmail.com>
Date:   Sun Feb 9 15:19:37 2025 +0200

    First commit and adding the models

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..edeb70d[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,92 @@[m
[32m+[m[32m# Created by https://www.toptal.com/developers/gitignore/api/rider,dotnetcore[m
[32m+[m[32m# Edit at https://www.toptal.com/developers/gitignore?templates=rider,dotnetcore[m
[32m+[m
[32m+[m[32m### DotnetCore ###[m
[32m+[m[32m# .NET Core build folders[m
[32m+[m[32mbin/[m
[32m+[m[32mobj/[m
[32m+[m
[32m+[m[32m# Common node modules locations[m
[32m+[m[32m/node_modules[m
[32m+[m[32m/wwwroot/node_modules[m
[32m+[m
[32m+[m[32m### Rider ###[m
[32m+[m[32m# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider[m
[32m+[m[32m# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839[m
[32m+[m
[32m+[m[32m# User-specific stuff[m
[32m+[m[32m.idea/**/workspace.xml[m
[32m+[m[32m.idea/**/tasks.xml[m
[32m+[m[32m.idea/**/usage.statistics.xml[m
[32m+[m[32m.idea/**/dictionaries[m
[32m+[m[32m.idea/**/shelf[m
[32m+[m
[32m+[m[32m# AWS User-specific[m
[32m+[m[32m.idea/**/aws.xml[m
[32m+[m
[32m+[m[32m# Generated files[m
[32m+[m[32m.idea/**/contentModel.xml[m
[32m+[m
[32m+[m[32m# Sensitive or high-churn files[m
[32m+[m[32m.idea/**/dataSources/[m
[32m+[m[32m.idea/**/dataSources.ids[m
[32m+[m[32m.idea/**/dataSources.local.xml[m
[32m+[m[32m.idea/**/sqlDataSources.xml[m
[32m+[m[32m.idea/**/dynamic.xml[m
[32m+[m[32m.idea/**/uiDesigner.xml[m
[32m+[m[32m.idea/**/dbnavigator.xml[m
[32m+[m
[32m+[m[32m# Gradle[m
[32m+[m[32m.idea/**/gradle.xml[m
[32m+[m[32m.idea/**/libraries[m
[32m+[m
[32m+[m[32m# Gradle and Maven with auto-import[m
[32m+[m[32m# When using Gradle or Maven with auto-import, you should exclude module files,[m
[32m+[m[32m# since they will be recreated, and may cause churn.  Uncomment if using[m
[32m+[m[32m# auto-import.[m
[32m+[m[32m# .idea/artifacts[m
[32m+[m[32m# .idea/compiler.xml[m
[32m+[m[32m# .idea/jarRepositories.xml[m
[32m+[m[32m# .idea/modules.xml[m
[32m+[m[32m# .idea/*.iml[m
[32m+[m[32m# .idea/modules[m
[32m+[m[32m# *.iml[m
[32m+[m[32m# *.ipr[m
[32m+[m
[32m+[m[32m# CMake[m
[32m+[m[32mcmake-build-*/[m
[32m+[m
[32m+[m[32m# Mongo Explorer plugin[m
[32m+[m[32m.idea/**/mongoSettings.xml[m
[32m+[m
[32m+[m[32m# File-based project format[m
[32m+[m[32m*.iws[m
[32m+[m
[32m+[m[32m# IntelliJ[m
[32m+[m[32mout/[m
[32m+[m
[32m+[m[32m# mpeltonen/sbt-idea plugin[m
[32m+[m[32m.idea_modules/[m
[32m+[m
[32m+[m[32m# JIRA plugin[m
[32m+[m[32matlassian-ide-plugin.xml[m
[32m+[m
[32m+[m[32m# Cursive Clojure plugin[m
[32m+[m[32m.idea/replstate.xml[m
[32m+[m
[32m+[m[32m# SonarLint plugin[m
[32m+[m[32m.idea/sonarlint/[m
[32m+[m
[32m+[m[32m# Crashlytics plugin (for Android Studio and IntelliJ)[m
[32m+[m[32mcom_crashlytics_export_strings.xml[m
[32m+[m[32mcrashlytics.properties[m
[32m+[m[32mcrashlytics-build.properties[m
[32m+[m[32mfabric.properties[m
[32m+[m
[32m+[m[32m# Editor-based Rest Client[m
[32m+[m[32m.idea/httpRequests[m
[32m+[m
[32m+[m[32m# Android studio 3.1+ serialized cache file[m
[32m+[m[32m.idea/caches/build_file_checksums.ser[m
[32m+[m
[32m+[m[32m# End of https://www.toptal.com/developers/gitignore/api/rider,dotnetcore[m
\ No newline at end of file[m
[1mdiff --git a/.idea/.idea.SimpleInventoryManagementSystem/.idea/.gitignore b/.idea/.idea.SimpleInventoryManagementSystem/.idea/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..1eb1d54[m
[1m--- /dev/null[m
[1m+++ b/.idea/.idea.SimpleInventoryManagementSystem/.idea/.gitignore[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m# Default ignored files[m
[32m+[m[32m/shelf/[m
[32m+[m[32m/workspace.xml[m
[32m+[m[32m# Rider ignored files[m
[32m+[m[32m/contentModel.xml[m
[32m+[m[32m/modules.xml[m
[32m+[m[32m/projectSettingsUpdater.xml[m
[32m+[m[32m/.idea.SimpleInventoryManagementSystem.iml[m
[32m+[m[32m# Editor-based HTTP Client requests[m
[32m+[m[32m/httpRequests/[m
[32m+[m[32m# Datasource local storage ignored files[m
[32m+[m[32m/dataSources/[m
[32m+[m[32m/dataSources.local.xml[m
[1mdiff --git a/.idea/.idea.SimpleInventoryManagementSystem/.idea/indexLayout.xml b/.idea/.idea.SimpleInventoryManagementSystem/.idea/indexLayout.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..7b08163[m
[1m--- /dev/null[m
[1m+++ b/.idea/.idea.SimpleInventoryManagementSystem/.idea/indexLayout.xml[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="UserContentModel">[m
[32m+[m[32m    <attachedFolders />[m
[32m+[m[32m    <explicitIncludes />[m
[32m+[m[32m    <explicitExcludes />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/SimpleInventoryManagementSystem.sln b/SimpleInventoryManagementSystem.sln[m
[1mnew file mode 100644[m
[1mindex 0000000..8311de6[m
[1m--- /dev/null[m
[1m+++ b/SimpleInventoryManagementSystem.sln[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mï»¿[m
[32m+[m[32mMicrosoft Visual Studio Solution File, Format Version 12.00[m
[32m+[m[32mProject("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "SimpleInventoryManagementSystem", "SimpleInventoryManagementSystem\SimpleInventoryManagementSystem.csproj", "{C3CA7C6F-6AB9-4AEF-9EE0-FF8AEF47C0B8}"[m
[32m+[m[32mEndProject[m
[32m+[m[32mGlobal[m
[32m+[m	[32mGlobalSection(SolutionConfigurationPlatforms) = preSolution[m
[32m+[m		[32mDebug|Any CPU = Debug|Any CPU[m
[32m+[m		[32mRelease|Any CPU = Release|Any CPU[m
[32m+[m	[32mEndGlobalSection[m
[32m+[m	[32mGlobalSection(ProjectConfigurationPlatforms) = postSolution[m
[32m+[m		[32m{C3CA7C6F-6AB9-4AEF-9EE0-FF8AEF47C0B8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU[m
[32m+[m		[32m{C3CA7C6F-6AB9-4AEF-9EE0-FF8AEF47C0B8}.Debug|Any CPU.Build.0 = Debug|Any CPU[m
[32m+[m		[32m{C3CA7C6F-6AB9-4AEF-9EE0-FF8AEF47C0B8}.Release|Any CPU.ActiveCfg = Release|Any CPU[m
[32m+[m		[32m{C3CA7C6F-6AB9-4AEF-9EE0-FF8AEF47C0B8}.Release|Any CPU.Build.0 = Release|Any CPU[m
[32m+[m	[32mEndGlobalSection[m
[32m+[m[32mEndGlobal[m
[1mdiff --git a/SimpleInventoryManagementSystem/Files/Products.txt b/SimpleInventoryManagementSystem/Files/Products.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/SimpleInventoryManagementSystem/Program.cs b/SimpleInventoryManagementSystem/Program.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..e5dff12[m
[1m--- /dev/null[m
[1m+++ b/SimpleInventoryManagementSystem/Program.cs[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mï»¿// See https://aka.ms/new-console-template for more information[m
[32m+[m
[32m+[m[32mConsole.WriteLine("Hello, World!");[m
\ No newline at end of file[m
[1mdiff --git a/SimpleInventoryManagementSystem/SimpleInventoryManagementSystem.csproj b/SimpleInventoryManagementSystem/SimpleInventoryManagementSystem.csproj[m
[1mnew file mode 100644[m
[1mindex 0000000..85b4959[m
[1m--- /dev/null[m
[1m+++ b/SimpleInventoryManagementSystem/SimpleInventoryManagementSystem.csproj[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32mï»¿<Project Sdk="Microsoft.NET.Sdk">[m
[32m+[m
[32m+[m[32m    <PropertyGroup>[m
[32m+[m[32m        <OutputType>Exe</OutputType>[m
[32m+[m[32m        <TargetFramework>net9.0</TargetFramework>[m
[32m+[m[32m        <ImplicitUsings>enable</ImplicitUsings>[m
[32m+[m[32m        <Nullable>enable</Nullable>[m
[32m+[m[32m    </PropertyGroup>[m
[32m+[m
[32m+[m[32m</Project>[m
[1mdiff --git a/SimpleInventoryManagementSystem/models/ProductsList.cs b/SimpleInventoryManagementSystem/models/ProductsList.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..b57f11e[m
[1m--- /dev/null[m
[1m+++ b/SimpleInventoryManagementSystem/models/ProductsList.cs[m
[36m@@ -0,0 +1,68 @@[m
[32m+[m[32mnamespace SimpleInventoryManagementSystem.models;[m
[32m+[m
[32m+[m[32mpublic interface IProductsPersistence[m
[32m+[m[32m{[m
[32m+[m[32m    List<Product> GetProducts();[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m[32mpublic interface IProductsListManager[m
[32m+[m[32m{[m
[32m+[m[32m    bool AddProduct(Product product);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mpublic class ProductsListManager : IProductsListManager[m
[32m+[m[32m{[m
[32m+[m[32m    public bool AddProduct(Product product)[m
[32m+[m[32m    {[m
[32m+[m[32m        throw new NotImplementedException();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mpublic class ProductsFilePersistence : IProductsPersistence[m
[32m+[m[32m{[m
[32m+[m[32m    public List<Product> GetProducts()[m
[32m+[m[32m    {[m
[32m+[m[32m        List<Product> products = new List<Product>();[m
[32m+[m[32m        try[m
[32m+[m[32m        {[m
[32m+[m[32m            StreamReader sr = new StreamReader("products.txt");[m
[32m+[m[32m            string? line= sr.ReadLine();[m
[32m+[m[32m            while (line!=null)[m
[32m+[m[32m            {[m
[32m+[m[32m                string[] product=line.Split(",");[m
[32m+[m[32m                products.Add(new Product(product[0],Int32.Parse(product[1]),Int32.Parse(product[2])));[m
[32m+[m[32m                line = sr.ReadLine();[m
[32m+[m[32m            }[m
[32m+[m[32m            sr.Close();[m
[32m+[m[41m            [m
[32m+[m[32m        }[m
[32m+[m[32m        catch (Exception e)[m
[32m+[m[32m        {[m
[32m+[m[32m            Console.WriteLine($"Couldn't Read from the file: {e.Message}");[m
[32m+[m[32m            System.Environment.Exit(1);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return products;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32mpublic class Products[m
[32m+[m[32m{[m
[32m+[m[32m    private static readonly object _lock = new object();[m
[32m+[m[32m    private static  Products _products;[m
[32m+[m[32m    private readonly List<Product> _productsList;[m
[32m+[m[32m    private Products()[m
[32m+[m[32m    {[m
[32m+[m[32m        _productsList = new List<Product>();[m[41m    [m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static Products GetInstance()[m
[32m+[m[32m    {[m
[32m+[m[32m        lock (_lock)[m
[32m+[m[32m        {[m
[32m+[m[32m            _products ??= new Products();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return _products;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/SimpleInventoryManagementSystem/models/product.cs b/SimpleInventoryManagementSystem/models/product.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..71c14ba[m
[1m--- /dev/null[m
[1m+++ b/SimpleInventoryManagementSystem/models/product.cs[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mnamespace SimpleInventoryManagementSystem.models;[m
[32m+[m
[32m+[m[32mpublic interface IProduct[m
[32m+[m[32m{[m
[32m+[m[32m    string Name { get; set; }[m
[32m+[m[32m    int Quantity { get; set; }[m
[32m+[m[32m    int Price { get; set; }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mpublic class Product(string name, int quantity, int price) : IProduct[m
[32m+[m[32m{[m
[32m+[m[32m    public string Name { get; set; } = name;[m
[32m+[m[32m    public int Quantity { get; set; } = quantity;[m
[32m+[m[32m    public int Price { get; set; } = price;[m
[32m+[m[32m}[m
\ No newline at end of file[m
